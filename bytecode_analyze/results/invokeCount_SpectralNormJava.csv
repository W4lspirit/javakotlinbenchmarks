"invokevirtual","java.lang.Exception.printStackTrace()",2
"invokevirtual","java.util.concurrent.CyclicBarrier.await()",2
"invokevirtual","java.io.PrintStream.println(java.lang.String)",1
"invokevirtual","java.lang.Runtime.availableProcessors()",1
"invokevirtual","java.text.NumberFormat.format(double)",1
"invokevirtual","javabenchmarks.spectralnorm.spectralnormjava$Approximate.join()",1
"invokevirtual","javabenchmarks.spectralnorm.spectralnormjava$Approximate.start()",1
"invokespecial","javabenchmarks.spectralnorm.spectralnormjava$Approximate.MultiplyAtAv(double[],double[],double[])",2
"invokespecial","java.lang.Object.<init>()",1
"invokespecial","java.lang.Thread.<init>()",1
"invokespecial","java.text.DecimalFormat.<init>(java.lang.String)",1
"invokespecial","java.util.concurrent.CyclicBarrier.<init>(int)",1
"invokespecial","javabenchmarks.spectralnorm.spectralnormjava$Approximate.<init>(double[],double[],double[],int,int)",1
"invokespecial","javabenchmarks.spectralnorm.spectralnormjava$Approximate.MultiplyAtv(double[],double[])",1
"invokespecial","javabenchmarks.spectralnorm.spectralnormjava$Approximate.MultiplyAv(double[],double[])",1
"invokestatic","javabenchmarks.spectralnorm.spectralnormjava$Approximate.eval_A(int,int)",2
"invokestatic","java.lang.Integer.parseInt(java.lang.String)",1
"invokestatic","java.lang.Math.sqrt(double)",1
"invokestatic","java.lang.Runtime.getRuntime()",1
"invokestatic","javabenchmarks.spectralnorm.spectralnormjava$Approximate.access$002(java.util.concurrent.CyclicBarrier)",1
"invokestatic","javabenchmarks.spectralnorm.spectralnormjava$Approximate.access$100(javabenchmarks.spectralnorm.spectralnormjava$Approximate)",1
"invokestatic","javabenchmarks.spectralnorm.spectralnormjava$Approximate.access$200(javabenchmarks.spectralnorm.spectralnormjava$Approximate)",1
"invokestatic","javabenchmarks.spectralnorm.spectralnormjava.spectralnormGame(int)",1
