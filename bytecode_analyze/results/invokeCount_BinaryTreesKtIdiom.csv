13:34:38.086 [main] ERROR o.a.jitwatch.loader.BytecodeLoader - could not parse bytecode: '}'
13:34:38.114 [main] ERROR o.a.jitwatch.loader.BytecodeLoader - could not parse bytecode: '}'
"invokevirtual","java.lang.StringBuilder.append(java.lang.String)",9
"invokevirtual","java.lang.StringBuilder.append(int)",7
"invokevirtual","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode.itemCheck()",5
"invokevirtual","java.lang.StringBuilder.toString()",4
"invokevirtual","java.io.PrintStream.println(java.lang.Object)",3
"invokevirtual","java.lang.Object.hashCode()",2
"invokevirtual","java.lang.StringBuilder.append(java.lang.Object)",2
"invokevirtual","java.lang.Runtime.availableProcessors()",1
"invokevirtual","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$EXECUTOR_SERVICE$2.invoke()",1
"invokevirtual","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode.copy(kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode,kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode)",1
"invokespecial","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom.bottomUpTree(int)",5
"invokespecial","java.lang.StringBuilder.<init>()",4
"invokespecial","java.lang.Object.<init>()",3
"invokespecial","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode.<init>(kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode,kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode)",3
"invokespecial","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom.getEXECUTOR_SERVICE()",3
"invokespecial","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode.<init>(kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode,kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$TreeNode,int,kotlin.jvm.internal.DefaultConstructorMarker)",2
"invokespecial","kotlin.jvm.internal.Lambda.<init>(int)",1
"invokespecial","kotlin.jvm.internal.PropertyReference1Impl.<init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)",1
"invokespecial","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$EXECUTOR_SERVICE$2.<init>()",1
"invokespecial","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom$execute$1.<init>(int,int,java.lang.String[])",1
"invokespecial","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom.<init>()",1
"invokestatic","kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object,java.lang.Object)",2
"invokestatic","kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object,java.lang.String)",2
"invokestatic","java.lang.Integer.parseInt(java.lang.String)",1
"invokestatic","java.lang.Runtime.getRuntime()",1
"invokestatic","java.util.concurrent.Executors.newFixedThreadPool(int)",1
"invokestatic","kotlin.LazyKt.lazy(kotlin.jvm.functions.Function0)",1
"invokestatic","kotlin.jvm.internal.Intrinsics.throwNpe()",1
"invokestatic","kotlin.jvm.internal.Reflection.getOrCreateKotlinClass(java.lang.Class)",1
"invokestatic","kotlin.jvm.internal.Reflection.property1(kotlin.jvm.internal.PropertyReference1)",1
"invokestatic","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom.access$bottomUpTree(kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom,int)",1
"invokestatic","kotlinbenchmarks.idiom.binarytrees.binarytreesktidiom.execute(java.lang.String[])",1
"invokeinterface","java.util.concurrent.ExecutorService.awaitTermination(long,java.util.concurrent.TimeUnit)",1
"invokeinterface","java.util.concurrent.ExecutorService.execute(java.lang.Runnable)",1
"invokeinterface","java.util.concurrent.ExecutorService.shutdown()",1
"invokeinterface","kotlin.Lazy.getValue()",1
