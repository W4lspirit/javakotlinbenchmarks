13:34:14.439 [main] DEBUG o.a.j.model.MemberSignatureParts - Synthetic bridge constructor arg: javabenchmarks.binarytrees.binarytreesjava$1
13:34:14.444 [main] DEBUG o.a.j.model.MemberSignatureParts - Synthetic bridge constructor arg: javabenchmarks.binarytrees.binarytreesjava$1
"invokevirtual","java.io.PrintStream.println(java.lang.String)",3
"invokevirtual","java.lang.Runtime.availableProcessors()",1
"invokespecial","javabenchmarks.binarytrees.binarytreesjava$TreeNode.itemCheck()",3
"invokespecial","java.lang.Object.<init>()",2
"invokespecial","javabenchmarks.binarytrees.binarytreesjava$TreeNode.<init>(javabenchmarks.binarytrees.binarytreesjava$TreeNode,javabenchmarks.binarytrees.binarytreesjava$TreeNode)",2
"invokespecial","javabenchmarks.binarytrees.binarytreesjava$TreeNode.<init>()",1
"invokespecial","javabenchmarks.binarytrees.binarytreesjava$TreeNode.<init>(javabenchmarks.binarytrees.binarytreesjava$1)",1
"invokespecial","javabenchmarks.binarytrees.binarytreesjava$TreeNode.<init>(javabenchmarks.binarytrees.binarytreesjava$TreeNode,javabenchmarks.binarytrees.binarytreesjava$TreeNode,javabenchmarks.binarytrees.binarytreesjava$1)",1
"invokestatic","javabenchmarks.binarytrees.binarytreesjava.bottomUpTree(int)",5
"invokestatic","javabenchmarks.binarytrees.binarytreesjava$TreeNode.access$000(javabenchmarks.binarytrees.binarytreesjava$TreeNode)",3
"invokestatic","java.lang.Integer.parseInt(java.lang.String)",1
"invokestatic","java.lang.Runtime.getRuntime()",1
"invokestatic","java.util.concurrent.Executors.newFixedThreadPool(int)",1
"invokeinterface","java.util.concurrent.ExecutorService.awaitTermination(long,java.util.concurrent.TimeUnit)",1
"invokeinterface","java.util.concurrent.ExecutorService.execute(java.lang.Runnable)",1
"invokeinterface","java.util.concurrent.ExecutorService.shutdown()",1
"invokedynamic","javabenchmarks.binarytrees.binarytreesjava.makeConcatWithConstants(int,int)",2
"invokedynamic","javabenchmarks.binarytrees.binarytreesjava.makeConcatWithConstants(int,int,int)",1
"invokedynamic","javabenchmarks.binarytrees.binarytreesjava.run(int,int,java.lang.String[])",1
