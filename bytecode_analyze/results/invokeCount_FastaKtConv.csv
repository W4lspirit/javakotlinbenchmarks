"invokevirtual","java.io.OutputStream.write(byte[])",5
"invokevirtual","java.util.concurrent.atomic.AtomicInteger.incrementAndGet()",5
"invokevirtual","java.lang.String.length()",4
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$AluBuffer.getLINE_LENGTH$main()",4
"invokevirtual","java.lang.String.getBytes(java.nio.charset.Charset)",3
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$AbstractBuffer.getNucleotides$main()",3
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$NucleotideSelector.take()",3
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv.getBUFFERS_IN_PLAY$main()",3
"invokevirtual","java.lang.Runtime.availableProcessors()",2
"invokevirtual","java.lang.StringBuilder.append(java.lang.String)",2
"invokevirtual","java.util.concurrent.ArrayBlockingQueue.put(java.lang.Object)",2
"invokevirtual","java.util.concurrent.ArrayBlockingQueue.take()",2
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$AluBuffer.getCHARS_LEFTOVER$main()",2
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$Buffer.getChars$main()",2
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$Buffer.getNucleotides$main()",2
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$Buffer.getRandoms$main()",2
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$NucleotideSelector.put(kotlinbenchmarks.conv.fasta.fastaktconv$AbstractBuffer)",2
"invokevirtual","java.lang.String.substring(int,int)",1
"invokevirtual","java.lang.StringBuilder.toString()",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$AbstractBuffer.selectNucleotides()",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$AluBuffer.getChars$main()",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$AluBuffer.getLINE_COUNT$main()",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$AluBuffer.getNucleotides$main()",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$AluBuffer.setChars$main(byte[])",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$Buffer.getCHARS_LEFTOVER$main()",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$Buffer.getLINE_LENGTH$main()",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$Buffer.setChars$main(byte[])",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$NucleotideSelector.setDaemon(boolean)",1
"invokevirtual","kotlinbenchmarks.conv.fasta.fastaktconv$NucleotideSelector.start()",1
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv.writeBuffer(java.io.OutputStream)",5
"invokespecial","kotlin.TypeCastException.<init>(java.lang.String)",4
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv.lineFillRandom(kotlinbenchmarks.conv.fasta.fastaktconv$Buffer)",4
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv$Buffer.<init>(boolean,int,int)",3
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv.lineFillALU(kotlinbenchmarks.conv.fasta.fastaktconv$AbstractBuffer)",3
"invokespecial","java.lang.Object.<init>()",2
"invokespecial","java.util.concurrent.ArrayBlockingQueue.<init>(int)",2
"invokespecial","java.util.concurrent.atomic.AtomicInteger.<init>()",2
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv$AbstractBuffer.<init>(int,int)",2
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv$AluBuffer.<init>(int,int,int)",2
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv$AluBuffer.ALUFillLine(int)",2
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv.speciesFillRandom(java.io.OutputStream,int,java.lang.String,boolean)",2
"invokespecial","java.lang.StringBuilder.<init>()",1
"invokespecial","java.lang.Thread.<init>()",1
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv$NucleotideSelector.<init>()",1
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv.<init>()",1
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv.bufferFillALU(java.io.OutputStream,int)",1
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv.bufferFillRandom(java.io.OutputStream,int)",1
"invokespecial","kotlinbenchmarks.conv.fasta.fastaktconv.speciesFillALU(java.io.OutputStream,int,java.lang.String)",1
"invokestatic","kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)",6
"invokestatic","kotlin.jvm.internal.Intrinsics.throwNpe()",6
"invokestatic","kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object,java.lang.String)",3
"invokestatic","java.lang.Runtime.getRuntime()",2
"invokestatic","kotlin.io.CloseableKt.closeFinally(java.io.Closeable,java.lang.Throwable)",2
"invokestatic","java.lang.Integer.parseInt(java.lang.String)",1
"invokestatic","java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)",1
"invokestatic","kotlinbenchmarks.conv.fasta.fastaktconv.execute(java.lang.String[])",1
